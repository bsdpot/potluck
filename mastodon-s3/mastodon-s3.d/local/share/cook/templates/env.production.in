# Please look at https://docs.joinmastodon.org/admin/config/
# for the full documentation.
# This is a custom file from the potluck mastondon-s3 image.
SINGLE_USER_MODE=false

# Federation
# ----------
# This identifies your server and cannot be changed safely later
# ----------
LOCAL_DOMAIN=%%domain%%

# Redis, using remote host
# -----
REDIS_HOST=%%redishost%%
REDIS_PORT=%%redisport%%
REDIS_NAMESPACE=mastodon
# not clear how to handle redis auth yet
#REDIS_URL=redis://user:password@localhost:6379

# PostgreSQL
# ----------
# the format DB_HOST=postgresql://%%dbuser%%@%%dbhost%%:%%dbport%%/%%dbname%% doesn't work
#
DB_HOST=%%dbhost%%
DB_NAME=%%dbname%%
DB_PORT=%%dbport%%
DB_USER=%%dbuser%%
DB_PASS=%%dbpass%%

# Elasticsearch (optional)
# ------------------------
ES_ENABLED=%%elasticenable%%
ES_HOST=%%elastichost%%
ES_PORT=%%elasticport%%
# Authentication for ES (optional)
ES_USER=%%elasticuser%%
ES_PASS=%%elasticpass%%

# Secrets
# -------
# Make sure to use `rake secret` to generate secrets
# -------
SECRET_KEY_BASE=%%secretkey%%
OTP_SECRET=%%otpsecret%%

# Web Push
# --------
# Generate with `rake mastodon:webpush:generate_vapid_key`
# --------
VAPID_PRIVATE_KEY=%%vapidprivatekey%%
VAPID_PUBLIC_KEY=%%vapidpublickey%%

# Sending mail
# ------------
SMTP_SERVER=%%mailhost%%
SMTP_PORT=%%mailport%%
SMTP_LOGIN=%%mailuser%%
SMTP_PASSWORD=%%mailpass%%
SMTP_FROM_ADDRESS=%%mailfrom%%
SMTP_AUTH_METHOD=plain
SMTP_OPENSSL_VERIFY_MODE=none
SMTP_SSL=true
SMTP_TLS=true
SMTP_ENABLE_STARTTLS_AUTO=true
SMTP_CA_FILE=/usr/local/share/certs/ca-root-nss.crt

# File storage (post to S3)
# -----------------------
S3_ENABLED=true
S3_REGION=%%region%%
# defaults to ‘s3.<S3_REGION>.amazonaws.com’, required if not using AWS S3
# We're forcing this to be set in the pot image.
#S3_ENDPOINT=%%uploadprotocol%%://%%s3hostname%%/%%bucketname%%/
# removing bucket from path, and don't include in S3_ALIAS_HOST either, to preserve
# AWS to Minio for S3
S3_ENDPOINT=%%uploadprotocol%%://%%s3hostname%%/
S3_BUCKET=%%bucketname%%
AWS_ACCESS_KEY_ID=%%s3user%%
AWS_SECRET_ACCESS_KEY=%%s3pass%%
# set this to true for minio
S3_FORCE_SINGLE_REQUEST=true

# File storage (client access to S3)
# -----------------------
S3_PROTOCOL=https
# defaults to ‘s3-<S3_REGION>.amazonaws.com’
# required if not using AWS S3 and S3_ALIAS_HOST is not set
S3_HOSTNAME=%%s3hostname%%
# S3_ALIAS_HOST can be used instead of S3_HOSTNAME if you do not want S3_BUCKET
# to be included in the media URLs
# requires that you have provisioned a reverse proxy or CDN in front of the storage provider
# If S3_ALIAS_HOST is set, then the URL will be ‘<S3_PROTOCOL>://<S3_ALIAS_HOST>/<object path>’
S3_ALIAS_HOST=%%aliashost%%

# IP and session retention
# -----------------------
# Make sure to modify the scheduling of ip_cleanup_scheduler in config/sidekiq.yml
# to be less than daily if you lower IP_RETENTION_PERIOD below two days (172800).
# -----------------------
IP_RETENTION_PERIOD=31556952
SESSION_RETENTION_PERIOD=31556952

# Extras
# "I would configure 5 processes, 10 threads each (MAX_THREADS=10 WEB_CONCURRENCY=5)
#  for a 200-user instance"
# https://github.com/mastodon/mastodon/issues/23412#issuecomment-1421044751
#
# Potluck: slight reduction of above
#
# Default: MAX_THREADS=5, DB_POOL defaults to MAX_THREADS if not set, is set in RC file
MAX_THREADS=8
# Default: WEB_CONCURRENCY=2
WEB_CONCURRENCY=4

# from wogan mastodon.africa
# Rationale: If we suspend an instance, the expectation is that nobody on that instance
# should have anything to do with anyone on our instance
AUTHORIZED_FETCH=true

# DeepL translation service
# https://www.deepl.com/en/docs-api
DEEPL_API_KEY=%%deepltranslatekey%%
DEEPL_PLAN=%%deepltranslateplan%%
