pidfile = "/var/run/prosody/prosody.pid"
interfaces = { "%%ip%%" }
local_interfaces = { "127.0.0.1" }
c2s_interfaces = { "127.0.0.1" }
c2s_ports = { 5222 }
component_interface = "127.0.0.1"
https_interfaces = { "127.0.0.1" }
admins = { "focus@auth.%%domain%%" }
plugin_paths = { "/usr/local/lib/jitsi-prosody-plugins/" }
network_backend = "event"

-- turn server
external_service_secret = "%%keypassword%%";
external_services = {
     { type = "stun", host = "%%domain%%", port = 3478 },
     { type = "turn", host = "%%domain%%", port = 3478, transport = "udp", secret = true, ttl = 86400, algorithm = "turn" },
     { type = "turns", host = "%%domain%%", port = 5349, transport = "tcp", secret = true, ttl = 86400, algorithm = "turn" }
};

modules_enabled = {

	-- Generally required
		"disco"; -- Service discovery
		"roster"; -- Allow users to have a roster. Recommended ;)
		"saslauth"; -- Authentication for clients and servers. Recommended if you want to log in.
		"tls"; -- Add support for secure TLS on c2s/s2s connections

	-- Not essential, but recommended
		"blocklist"; -- Allow users to block communications with other users
		"bookmarks"; -- Synchronise the list of open rooms between clients
		"carbons"; -- Keep multiple online clients in sync
		"dialback"; -- Support for verifying remote servers using DNS
		"limits"; -- Enable bandwidth limiting for XMPP connections
		"pep"; -- Allow users to store public and private data in their account
		"private"; -- Legacy account storage mechanism (XEP-0049)
		"smacks"; -- Stream management and resumption (XEP-0198)
		"vcard4"; -- User profiles (stored in PEP)
		"vcard_legacy"; -- Conversion between legacy vCard and PEP Avatar, vcard

	-- Nice to have
		"csi_simple"; -- Simple but effective traffic optimizations for mobile devices
		"invites"; -- Create and manage invites
		"invites_adhoc"; -- Allow admins/users to create invitations via their client
		"invites_register"; -- Allows invited users to create accounts
		"ping"; -- Replies to XMPP pings with pongs
		"register"; -- Allow users to register on this server using a client and change passwords
		"time"; -- Let others know the time here on this server
		"uptime"; -- Report how long server has been running
		"version"; -- Replies to server version requests
		--"mam"; -- Store recent messages to allow multi-device synchronization
		--"turn_external"; -- Provide external STUN/TURN service for e.g. audio/video calls

	-- Admin interfaces
		"admin_adhoc"; -- Allows administration via an XMPP client that supports ad-hoc commands
		"admin_shell"; -- Allow secure administration via 'prosodyctl shell'

	-- HTTP modules
		--"bosh"; -- Enable BOSH clients, aka "Jabber over HTTP"
		--"http_openmetrics"; -- for exposing metrics to stats collectors
		--"websocket"; -- XMPP over WebSockets

	-- Other specific functionality
		--"announce"; -- Send announcement to all online users
		--"groups"; -- Shared roster support
		--"legacyauth"; -- Legacy authentication. Only used by some old clients and bots.
		--"mimicking"; -- Prevent address spoofing
		--"motd"; -- Send a message to users when they log in
		--"proxy65"; -- Enables a file transfer proxy service which clients behind NAT can use
		--"s2s_bidi"; -- Bi-directional server-to-server (XEP-0288)
		--"server_contact_info"; -- Publish contact information for this service
		--"tombstones"; -- Prevent registration of deleted accounts
		--"watchregistrations"; -- Alert admins of registrations
		--"welcome"; -- Welcome users who register accounts
}

archive_expires_after = "1w" -- Remove archived messages after 1 week

log = {
        info = "/var/log/prosody/prosody.log";
        error = "/var/log/prosody/prosody.err";
        -- "*syslog"; -- Uncomment this for logging to syslog
        -- "*console"; -- Log to the console, useful for debugging with daemonize=false
}

-- domain mapper options, must at least have domain base set to use the mapper
muc_mapper_domain_base = "%%domain%%";

--cross_domain_bosh = false;
consider_bosh_secure = true;

-- cross_domain_websocket = false;
consider_websocket_secure = true;

https_ports = { }; -- Remove this line to prevent listening on port 5284

-- https://ssl-config.mozilla.org/#server=haproxy&version=2.1&config=intermediate&openssl=1.1.0g&guideline=5.4
ssl = {
    protocol = "tlsv1_2+";
    ciphers = "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384"
}

unlimited_jids = {
    "focus@auth.%%domain%%",
    "jvb@auth.%%domain%%"
}

certificates = "/var/db/prosody/"

VirtualHost "localhost"
    ssl = {
        key = "/var/db/prosody/localhost.key";
        certificate = "/var/db/prosody/localhost.crt";
    }

-- Your domain from here
VirtualHost "%%domain%%"
    authentication = "anonymous"
    ssl = {
        key = "/var/db/prosody/%%domain%%.key";
        certificate = "/var/db/prosody/%%domain%%.crt";
        https_key = "/var/db/prosody/%%domain%%.key";
        https_certificate = "/var/db/prosody/%%domain%%.crt";
    }
    av_moderation_component = "avmoderation.%%domain%%"
    speakerstats_component = "speakerstats.%%domain%%"
    conference_duration_component = "conferenceduration.%%domain%%"
    -- we need bosh, websocket, smacks
    modules_enabled = {
        "bosh";
        "pubsub";
        "ping";
	"websocket";
	"smacks";
        "speakerstats";
        "external_services";
        "conference_duration";
        "muc_lobby_rooms";
        "muc_breakout_rooms";
        "av_moderation";
        "saslauth";
    }
    c2s_require_encryption = false
    lobby_muc = "lobby.%%domain%%"
    breakout_rooms_muc = "breakout.%%domain%%"
    main_muc = "conference.%%domain%%"
    -- muc_lobby_whitelist = { "recorder.%%domain%%" } -- Here we can whitelist jibri to enter lobby enabled rooms
    smacks_max_unacked_stanzas = 5;
    smacks_hibernation_time = 60;
    smacks_max_hibernated_sessions = 1;
    smacks_max_old_sessions = 1;

Component "conference.%%domain%%" "muc"
    restrict_room_creation = true
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        "polls";
        --"token_verification";
        "muc_rate_limit";
        "saslauth";
    }
    admins = { "focus@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true
    c2s_require_encryption = false

Component "breakout.%%domain%%" "muc"
    restrict_room_creation = true
    storage = "memory"
    modules_enabled = {
        "muc_meeting_id";
        "muc_domain_mapper";
        --"token_verification";
        "muc_rate_limit";
        "polls";
        "saslauth";
    }
    admins = { "focus@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true

-- internal muc component
Component "internal.auth.%%domain%%" "muc"
    storage = "memory"
    modules_enabled = {
        "ping";
    }
    admins = { "focus@auth.%%domain%%", "jvb@auth.%%domain%%" }
    muc_room_locking = false
    muc_room_default_public_jids = true
    c2s_require_encryption = false

VirtualHost "auth.%%domain%%"
    ssl = {
        key = "/var/db/prosody/auth.%%domain%%.key";
        certificate = "/var/db/prosody/auth.%%domain%%.crt";
    }
    modules_enabled = {
        "limits_exception";
        "saslauth";
    }
    --authentication = "internal_plain" 
    c2s_require_encryption = false
    authentication = "internal_hashed"

Component "focus.%%domain%%" "client_proxy"
    target_address = "focus@auth.%%domain%%"

Component "speakerstats.%%domain%%" "speakerstats_component"
    muc_component = "conference.%%domain%%"

Component "conferenceduration.%%domain%%" "conference_duration_component"
    muc_component = "conference.%%domain%%"

Component "avmoderation.%%domain%%" "av_moderation_component"
    muc_component = "conference.%%domain%%"

Component "lobby.%%domain%%" "muc"
    storage = "memory"
    restrict_room_creation = true
    muc_room_locking = false
    muc_room_default_public_jids = true
    modules_enabled = {
        "muc_rate_limit";
        "polls";
        "saslauth";
    }
    c2s_require_encryption = false

-- removing this legacy component
--Component "jitsi-videobridge.%%domain%%"
  --  component_secret = "%%keypassword%%"
