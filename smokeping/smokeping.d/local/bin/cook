#!/bin/sh
RUNS_IN_NOMAD=false
COOKLOG=/var/log/cook.log

pot_seasoned_exit() {
    [ ! -e /usr/local/etc/pot-is-seasoned ] && \
      touch /usr/local/etc/pot-is-seasoned
    # If this pot flavour is blocking (i.e. it should not return), there is
    # no /tmp/environment.sh created by pot and we now after configuration
    # block indefinitely
    if [ "$RUNS_IN_NOMAD" = "true" ]; then
        service cook onestop || true
        service cook onedisable || true
        /bin/sh /etc/rc
        tail -f /dev/null
    fi
    exit 0
}

# No need to change this, just ensures configuration is done only once
[ -e /usr/local/etc/pot-is-seasoned ] && pot_seasoned_exit

########################################################################
## Functions and settings
########################################################################

log() {
    echo "$(date '+%Y-%m-%dT%H:%M:%S') $*" | tee -a $COOKLOG
}

set -e
export HOME=/root

if [ -e /tmp/environment.sh ]
then
    # shellcheck disable=SC1091
    . /tmp/environment.sh

    # XXX: Remove some things from here later
    cp -a /tmp/environment.sh /root/.env.cook
fi


########################################################################
## Get passed in options
########################################################################

OPTIND=1
while getopts "a:e:h:i:m:n:z:" option
do
    case "${option}"
    in
      a) ALERTEMAIL=${OPTARG}
         export ALERTEMAIL
         ;;
      e) EMAIL=${OPTARG}
         export EMAIL
         ;;
      h) HOSTNAME=${OPTARG}
         export HOSTNAME
         ;;
      i) IP=${OPTARG}
         export IP
         ;;
      m) MAILHOST=${OPTARG}
         export MAILHOST
         ;;
      n) NODENAME=${OPTARG}
         export NODENAME
         ;;
      z) ALTNETWORK=${OPTARG}
         export ALTNETWORK
         ;;
    esac
done
shift "$((OPTIND-1))"

########################################################################
## Check config
########################################################################

required_args="ALERTEMAIL EMAIL HOSTNAME IP MAILHOST NODENAME"
optional_args="ALTNETWORK"

for var in $required_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "$var is unset - see documentation to configure this flavour."
    exit 1
  fi
done

for var in $optional_args; do
  if [ -z "$(eval echo "\${$var}")" ]; then
    log "Optional $var is unset - see documentation to configure this flavour."
  fi
done

########################################################################
## Provision image
########################################################################

# make persistent storage and set permissions
mkdir -p /mnt/smokeping/data
mkdir -p /mnt/smokeping/imagecache
mkdir -p /mnt/smokeping/run
chown -R smokeping:smokeping /mnt/smokeping
chown -R smokeping:www /mnt/smokeping/imagecache/
chmod 2775 /mnt/smokeping/imagecache/

# set path
export PATH=/usr/local/share/cook/bin:$PATH

# check if ALTNETWORK set
if [ -n "$ALTNETWORK" ]; then
	log "Configuring an epair0b interface for alternate networking"
	configure-altnetwork.sh
fi

log "Configure fcgiwrap"
configure-fcgiwrap.sh

log "Configure nginx"
configure-nginx.sh

log "Configure smokeping"
configure-smokeping.sh

log "Start fcgiwrap"
service fcgiwrap start

log "Start nginx"
service nginx start

log "Start smokeping"
service smokeping start

log "Exit seasoned"
pot_seasoned_exit
